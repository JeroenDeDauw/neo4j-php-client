version: '3.8'

x-shared:
  &common
  NEO4J_AUTH: neo4j/testtest
  NEO4J_PLUGINS: '["apoc"]'

x-shared-cluster:
  &common-cluster
  <<: *common
  NEO4J_EDITION: 'enterprise'
  NEO4J_ACCEPT_LICENSE_AGREEMENT: "yes"
  EXTENDED_CONF: 'yes'

x-shared-core:
  &common-core
  <<: *common-cluster
  NEO4J_initial_server_mode__constraint: 'PRIMARY'

networks:
    neo4j:
        driver: bridge
    neo4j-internal:

services:
    client:
        build:
            context: .
            dockerfile: Dockerfile
        working_dir: /opt/project
        networks:
            - neo4j
        volumes:
            - .:/opt/project
        expose:
            - 9000
        env_file:
          - .env
    testkit-backend:
        build:
            context: .
            dockerfile: Dockerfile
            args:
                - WITH_XDEBUG=true
        working_dir: /opt/project
        volumes:
            - .:/opt/project
        command: php /opt/project/testkit-backend/index.php
        networks:
          - neo4j
        depends_on:
          - neo4j
        ports:
          - "9876:9876"
    neo4j:
        networks:
            - neo4j
        image: neo4j:5
        healthcheck:
          test: [ "CMD-SHELL", "wget --no-verbose --tries=1 --spider localhost:7474 || exit 1" ]
        user: ${USER_ID}:${GROUP_ID}
        ports:
          - "7687:7687"
          - "7474:7474"
        environment:
          <<: *common
          NEO4J_EDITION: community
        volumes:
          - ./neo4j/neo4j.conf:/conf/neo4j.conf
          - ./neo4j/data/neo4j:/var/lib/neo4j/data
          - ./neo4j/logs/neo4j:/var/lib/neo4j/logs
          - ./neo4j/conf/neo4j:/var/lib/neo4j/conf
          - ./neo4j/import/neo4j:/var/lib/neo4j/import
          - ./neo4j/metrics/neo4j:/var/lib/neo4j/metrics
          - ./neo4j/licenses/neo4j:/var/lib/neo4j/licenses
          - ./neo4j/ssl/neo4j:/var/lib/neo4j/ssl
        env_file:
          - .env

#    server1:
#        image: neo4j:5
#        hostname: server1
#        networks:
#          neo4j:
#          neo4j-internal:
#            aliases:
#              - neo4j-network
#        ports:
#          - "7688:7687"
#          - "7475:7474"
#        healthcheck:
#          test: [ "CMD-SHELL", "wget --no-verbose --tries=1 --spider localhost:7474 || exit 1" ]
#        user: ${USER_ID}:${GROUP_ID}
#        volumes:
#          - ./tests/resources:/import
#          - ./neo4j.conf:/conf/neo4j.conf
#        environment:
#          <<: *common-core
#        env_file:
#          - .env
#
#    server2:
#        image: neo4j:5
#        hostname: server2
#        networks:
#          neo4j:
#          neo4j-internal:
#            aliases:
#              - neo4j-network
#        ports:
#          - "7689:7687"
#          - "7476:7474"
#        healthcheck:
#          test: [ "CMD-SHELL", "wget --no-verbose --tries=1 --spider localhost:7474 || exit 1" ]
#        user: ${USER_ID}:${GROUP_ID}
#        environment:
#          <<: *common-core
#        volumes:
#          - ./tests/resources:/import
#          - ./neo4j.conf:/conf/neo4j.conf
#        env_file:
#          - .env
#
#    server3:
#        image: neo4j:5
#        hostname: server3
#        networks:
#          neo4j:
#          neo4j-internal:
#            aliases:
#              - neo4j-network
#        ports:
#          - "7690:7687"
#          - "7477:7474"
#        healthcheck:
#          test: [ "CMD-SHELL", "wget --no-verbose --tries=1 --spider localhost:7474 || exit 1" ]
#        user: ${USER_ID}:${GROUP_ID}
#        environment:
#          <<: *common-core
#        volumes:
#          - ./tests/resources:/import
#          - ./neo4j.conf:/conf/neo4j.conf
#        env_file:
#          - .env
#
#    server4:
#        image: neo4j:5
#        hostname: server4
#        networks:
#          neo4j:
#          neo4j-internal:
#            aliases:
#              - neo4j-network
#        ports:
#          - "7691:7687"
#          - "7478:7474"
#        healthcheck:
#          test: [ "CMD-SHELL", "wget --no-verbose --tries=1 --spider localhost:7474 || exit 1" ]
#        user: ${USER_ID}:${GROUP_ID}
#        environment:
#          <<: *common-cluster
#          NEO4J_initial_server_mode__constraint: SECONDARY
#        env_file:
#          - .env
#        volumes:
#          - ./tests/resources:/import
#          - ./neo4j.conf:/conf/neo4j.conf
